version: "3.8"

services:

  postgres:
    image: postgres:14
    container_name: airflow-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
    - "5435:5432" 
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-webserver:
    image: ${AIRFLOW_IMAGE_NAME}
    container_name: airflow-webserver
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: ${EXECUTOR}
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      AIRFLOW__WEBSERVER__RBAC: "True"
      _PIP_ADDITIONAL_REQUIREMENTS: > 
        psycopg2-binary
        pandas
        sqlalchemy 
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./scripts:/opt/airflow/scripts
    ports:
      - "8080:8080"
    command: webserver
    restart: always
    user: "${AIRFLOW_UID}:0"

  airflow-scheduler:
    image: ${AIRFLOW_IMAGE_NAME}
    container_name: airflow-scheduler
    depends_on:
      - airflow-webserver
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: ${EXECUTOR}
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      _PIP_ADDITIONAL_REQUIREMENTS: >
        psycopg2-binary
        pandas
        sqlalchemy
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./scripts:/opt/airflow/scripts
    command: scheduler
    restart: always
    user: "${AIRFLOW_UID}:0"

  airflow-init:
    image: ${AIRFLOW_IMAGE_NAME}
    container_name: airflow-init
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: ${EXECUTOR}
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      _PIP_ADDITIONAL_REQUIREMENTS: >
        psycopg2-binary
        pandas
        sqlalchemy
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./scripts:/opt/airflow/scripts
    command: >
      bash -c "
        airflow db upgrade &&
        airflow users create --username ${ADMIN_USER} --password ${ADMIN_PASSWORD} --firstname Admin --lastname User --role Admin --email ${ADMIN_EMAIL} || true
      "
    user: "${AIRFLOW_UID}:0"
